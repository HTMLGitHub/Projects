/**
 * 
 */
package superAdventure;

import engine.ITEM_ID;
import engine.InventoryItem;
import engine.LOCATION_ID;
import engine.Location;
import engine.Monster;
import engine.Player;
import engine.PlayerQuest;
import engine.QuestCompletionItem;
import engine.World;

/**
 * @author bak12
 *
 */
public class SuperAdventure
{
	private Player _player;
	private Monster _monster;
	
	private String rtbMessages;
	private String rtbLocation;
	
	public SuperAdventure()
	{
		_player = new Player(10,10,20,0,1);
		MoveTo(World.LocationById(LOCATION_ID.HOME.ordinal()));
		_player.setInventory(new InventoryItem(World.ItemById(ITEM_ID.RUSTY_SWORD.ordinal()), 1));
	}
	
	private void North()
	{
		MoveTo(_player.getCurrentLocation().getLocationToNorth());
	}
	
	private void South() 
	{
		MoveTo(_player.getCurrentLocation().getLocationToSouth());
	}
	
	private void East() 
	{
		MoveTo(_player.getCurrentLocation().getLocationToEast());
	}
	
	private void West() 
	{
		MoveTo(_player.getCurrentLocation().getLocationToWest());
	}
	
	private void MoveTo(Location newLocation)
	{
		//Does location have any required items
		if(newLocation.getItemRequiredToEnter() != null)
		{
			//See if the player has the required item in their inventory
			boolean playerHasRequiredItem = false;
			
			for(InventoryItem ii: _player.getInventory())
			{
				if(ii.getDetails().getId() == newLocation.getItemRequiredToEnter().getId())
				{
					//We found the required item
					playerHasRequiredItem = true;
					break; //Exit out of the loop
				}
			}
			
			//player does not have the required item to enter this location
			if(!playerHasRequiredItem)
			{
				//We didn't find the item in their inventory,
				//so display a message to stop trying to move
				rtbMessages = "You must have a " + newLocation.getItemRequiredToEnter().getName() + " to enter this location.\n";
				return;
			}
		}
		
		//update the player's current location
		_player.setCurrentLocation(newLocation);
		
		//TODO Show/Hide available movement buttons
		//North_Button.visible = (newLocation.LocationToNorth != null);
		//South_Button.visible = (newLocation.LocationToSouth != null);
		//East_Button.visible = (newLocation.LocationToEast != null);
		//West_Button.visible = (newLocation.LocationToWest != null);
		
		//Display current location name and description
		rtbLocation = newLocation.getName() + "\n" + newLocation.getDescription() + "\n";
		
		//Completely heal the player
		_player.setCurrentHitPoints(_player.getMaximumHitPoints());
		
		//TODO Update Hit Points in UI
		//label Hit_Points.text = _player.getCurrentHitPoints.ToString();
		
		//does the location have a quest?
		if(newLocation.getQuestAvailablehere() != null)
		{
			//see if the player already has the quest, an dif they have completed it
			boolean playerAlreadyHasQuest = false;
			boolean playerAlreadyCompletedQuest = false;
		
			for(PlayerQuest playerQuest: _player.getQuests())
			{
				if(playerQuest.getDetails().getId() == newLocation.getQuestAvailablehere().getId())
				{
					playerAlreadyHasQuest = true;
					
					if(playerQuest.isIsCompleted())
					{
						playerAlreadyCompletedQuest = true;
					}
				}
			}
			
			//see if the player already has the quest
			if(playerAlreadyHasQuest)
			{
				//has the player completed the quest
				if(!playerAlreadyCompletedQuest)
				{
					//see if the player has all of the items needed to complete the quest
					boolean playerHasAllItemsToCompleteQuest = true;
					
					for(QuestCompletionItem qci: newLocation.getQuestAvailablehere().getQuestCompletionItems())
					{
						boolean foundItemInPlayersInventory = false;
						
						//check each item in the player's inventory, to see if they have it, and enough of it
						for(InventoryItem ii: _player.getInventory())
						{
							//the player has the item in their inventory
							if(ii.getDetails().getId() == qci.getDetails().getId())
							{
								foundItemInPlayersInventory = true;
								
								if(ii.getQuantity()<qci.getQuantity())
								{
									//the player does not have enough of this item to complete the quest
									playerHasAllItemsToCompleteQuest = false;
									
									//there is no reason to continue checking for the other quest complteion items
									break;
								}
								//we found the item, so don't check  the rest of the player's inventory
								break;
							}
						}
					}
				}
			}
		}
 	}
}
